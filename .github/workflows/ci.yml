name: CI
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        ghc: ['8.6', '8.8', '8.10', '9.0', '9.2', '9.4']
        cabal: ['3.8']
        nginx: [1.20.2]
        nginx-haskell-module: [3.4.2]
        experimental: [false]
        include:
          - ghc: '9.10'
            cabal: '3.12'
            nginx: head
            nginx-haskell-module: head
            experimental: true
          - ghc: '9.10'
            cabal: '3.12'
            nginx: 1.26.2
            nginx-haskell-module: head
            experimental: false
          - ghc: '9.8'
            cabal: '3.10'
            nginx: 1.24.0
            nginx-haskell-module: head
            experimental: false
          - ghc: '9.6'
            cabal: '3.10'
            nginx: 1.22.1
            nginx-haskell-module: head
            experimental: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GHC and Cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - name: Install prove
        uses: perl-actions/install-with-cpanm@v1.7
        with:
          install: "Test::Nginx"
          tests: false
      - name: Install dnsmasq
        run: |
          sudo apt-get update 
          sudo apt-get install -y dnsmasq
      - name: Install and test
        env:
          GHCVER: ${{ matrix.ghc }}
          NGXVER: ${{ matrix.nginx }}
          CABALVER: ${{ matrix.cabal }}
          NGXHMVER: ${{ matrix.nginx-haskell-module }}
        run: |
          cabal --version
          echo "$(ghc --version) "`
              `"[$(ghc --print-project-git-commit-id 2>/dev/null || echo '?')]"

          cabal update
          cabal build

          if [ "$NGXVER" = head ]
          then
              git clone https://github.com/nginx/nginx.git nginx-head
          else
              wget http://nginx.org/download/nginx-${NGXVER}.tar.gz &&
                  tar xzvf nginx-${NGXVER}.tar.gz
          fi

          if [ "$NGXHMVER" = head ]
          then
              git clone https://github.com/lyokha/nginx-haskell-module.git \
                  nginx-haskell-module-head
          else
              wget "https://github.com/lyokha/nginx-haskell-module/"`
                  `"archive/refs/tags/${NGXHMVER}.tar.gz" \
                      -O nginx-haskell-module-${NGXHMVER}.tar.gz &&
                      tar xzvf nginx-haskell-module-${NGXHMVER}.tar.gz
          fi
          sudo wget -P /usr/include \
              https://raw.githubusercontent.com/zserge/jsmn/$JSMN_REV/jsmn.h
          git clone https://github.com/openresty/echo-nginx-module.git

          export TEST_NGINX_TELIB_DIR="$(pwd)/var/lib/nginx"
          install -d "$TEST_NGINX_TELIB_DIR"

          cd nginx-${NGXVER}/
          if [ "$NGXVER" = head ]
          then
              NGX_CONFIGURE=./auto/configure
          else
              NGX_CONFIGURE=./configure
          fi
          $NGX_CONFIGURE --add-module=../nginx-haskell-module-${NGXHMVER} \
                         --add-module=../nginx-haskell-module-${NGXHMVER}/examples/dynamicUpstreams/nginx-upconf-module \
                         --add-module=../echo-nginx-module
          make -j2
          export PATH="$(pwd)/objs:$PATH"
          cd -

          cd test
          echo "$GHCVER" | grep -q '^8\.' &&
              LINKRTS="LINKRTS=-lHSrts_thr-ghc$(ghc --numeric-version)"

          for dir in Aggregate EDE PCRE ServiceHookAdaptor Subrequest
          do
              cd $dir
              sed -i 's/^packages: .\+/'`
                    `'& ..\/..\/ngx-export-tools-extra.cabal/' cabal.project
              make PREFIX="$TEST_NGINX_TELIB_DIR" INPLACE=1 $LINKRTS
              make PREFIX="$TEST_NGINX_TELIB_DIR" install
              prove -r t
              cd -
          done

          cd Resolve
          sudo unlink /etc/resolv.conf
          echo nameserver 127.0.0.1 | sudo tee /etc/resolv.conf
          sudo cp dnsmasq.conf /etc
          sudo systemctl restart dnsmasq
          sed -i 's/^packages: .\+/'`
                `'& ..\/..\/ngx-export-tools-extra.cabal/' cabal.project
          make PREFIX="$TEST_NGINX_TELIB_DIR" INPLACE=1 $LINKRTS
          make PREFIX="$TEST_NGINX_TELIB_DIR" install
          prove -r t

